---
- name: Ensure parity mount points exist
  ansible.builtin.file:
    path: "{{ parity_mount_path }}/parity{{ '%02d' % (index + 1) }}"
    state: directory
    mode: "0770"
  loop: "{{ parity_disks }}"
  loop_control:
    index_var: index

- name: Ensure parity mounts are present in fstab
  ansible.builtin.blockinfile:
    path: /etc/fstab
    block: |
      {% for disk in parity_disks %}
      {% if disk in partitioned_disks %}
      {{ disk }}-part1  {{ parity_mount_path }}/parity{{ '%02d' % (loop.index) }}  ext4  {{ manage_disks_nas_ext4_mount_opts }}  0  0
      {% else %}
      {{ disk }}  {{ parity_mount_path }}/parity{{ '%02d' % (loop.index) }}  ext4  {{ manage_disks_nas_ext4_mount_opts }}  0  0
      {% endif %}
      {% endfor %}
    marker: "# {mark} ANSIBLE MANAGED BLOCK - PARITY DISK MOUNTS"
    create: true

- name: Mount parity disks
  ansible.posix.mount:
    path: "{{ parity_mount_path }}/parity{{ '%02d' % (index + 1) }}"
    src: "{{ item if item not in partitioned_disks else item + '-part1' }}"
    fstype: ext4
    opts: "{{ manage_disks_nas_ext4_mount_opts }}"
    state: mounted
  loop: "{{ parity_disks }}"
  loop_control:
    index_var: index

# Cache Disks
- name: Cache disks block
  when: cache_disks_only | length > 0
  block:
    - name: Ensure cache disk mounts are present in fstab
      ansible.builtin.blockinfile:
        path: /etc/fstab
        block: |
          {% for disk in cache_disks_only %}
          {% if disk in partitioned_disks %}
          {{ disk }}-part1  {{ cache_mount_path }}/cache{{ '%02d' % (loop.index) }}  ext4  {{ manage_disks_nas_ext4_mount_opts }}  0  0
          {% else %}
          {{ disk }}  {{ cache_mount_path }}/cache{{ '%02d' % (loop.index) }}  ext4  {{ manage_disks_nas_ext4_mount_opts }}  0  0
          {% endif %}
          {% endfor %}
        marker: "# {mark} ANSIBLE MANAGED BLOCK - CACHE DISK MOUNTS"

    - name: Ensure cache disk mounts are present in fstab
      ansible.builtin.blockinfile:
        path: /etc/fstab
        block: |
          {% for disk in cache_disks_only %}
          {{ disk }}  {{ cache_mount_path }}/cache{{ '%02d' % (loop.index) }}  ext4  {{ manage_disks_nas_ext4_mount_opts }}  0  0
          {% endfor %}
        marker: "# {mark} ANSIBLE MANAGED BLOCK - CACHE DISK MOUNTS"

    - name: Mount cache disks
      ansible.posix.mount:
        path: "{{ cache_mount_path }}/cache{{ '%02d' % (index + 1) }}"
        src: "{{ item if item not in partitioned_disks else item + '-part1' }}"
        fstype: ext4
        opts: "{{ manage_disks_nas_ext4_mount_opts }}"
        state: mounted
      loop: "{{ cache_disks_only }}"
      loop_control:
        index_var: index

    - name: Set permissions on cache disk directories
      ansible.builtin.file:
        path: "{{ cache_mount_path }}/cache{{ '%02d' % (index + 1) }}"
        state: directory
        owner: "{{ user }}"
        group: "{{ media_group }}"
        mode: "0770"
        recurse: true
      loop: "{{ cache_disks_only }}"
      loop_control:
        index_var: index

# Cache Paths
- name: Ensure cache paths exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ media_group }}"
    mode: "0770"
  loop: "{{ cache_paths_only }}"
  when: cache_paths_only | length > 0
