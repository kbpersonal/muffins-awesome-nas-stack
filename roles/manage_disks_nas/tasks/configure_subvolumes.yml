---
- name: Ensure base mount point exists
  ansible.builtin.file:
    path: /mnt/btrfs-root
    state: directory
    mode: '0770'

- name: Ensure mount point directories exist
  ansible.builtin.file:
    path: "/mnt/btrfs-root/{{ item | basename }}"
    state: directory
    mode: '0770'
  loop: "{{ data_disks }}"
  loop_control:
    label: "{{ item }}"

- name: Check if the filesystem is already mounted
  ansible.builtin.shell: |
    set -o pipefail
    mount | grep "/mnt/btrfs-root/{{ item | basename }}"
  args:
    executable: /bin/bash
  register: mount_check
  loop: "{{ data_disks }}"
  loop_control:
    label: "{{ item }}"
  changed_when: false
  failed_when: false

- name: Mount the main Btrfs filesystem partition
  ansible.posix.mount:
    path: /mnt/btrfs-root/{{ item | basename }}
    src: "{{ item if item not in partitioned_disks else item + '-part1' }}"
    fstype: btrfs
    state: ephemeral
  loop: "{{ data_disks }}"
  when: mount_check.results | selectattr('rc', 'equalto', 1) | list | length > 0

- name: List subvolumes
  ansible.builtin.shell: |
    set -o pipefail
    btrfs subvolume list /mnt/btrfs-root/{{ item | basename }} | grep data
  args:
    executable: /bin/bash
  loop: "{{ data_disks }}"
  register: subvolume_check
  changed_when: false
  failed_when: false

- name: Create Btrfs data subvolume
  ansible.builtin.command: >
    btrfs subvolume create /mnt/btrfs-root/{{ item.item | basename }}/data
  loop: "{{ subvolume_check.results }}"
  when: "'data' not in item.stdout"
  loop_control:
    label: "{{ item.item }}"
  register: create_subvolume_result
  failed_when:
    - create_subvolume_result.rc != 0
    - "'already exists' not in create_subvolume_result.stderr"

- name: Unmount the fs
  ansible.posix.mount:
    path: /mnt/btrfs-root/{{ item | basename }}
    state: unmounted
  loop: "{{ data_disks }}"

- name: Remove individual mount points
  ansible.builtin.file:
    path: "/mnt/btrfs-root/{{ item | basename }}"
    state: absent
  loop: "{{ data_disks }}"
  loop_control:
    label: "{{ item }}"
